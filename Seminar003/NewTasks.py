#31. Для натурального N создать множество: 1, -3, 9, -27, 81 и т.д.




#32.  Для натурального N создать словарь индекс-значение,
#  состоящий из элементов последовательности 3k + 1.

# def Sequence(k):
#     return 3*k+1

# def Natur(N):
#     for i in range(1, N+1):
#         return i


# dictionary = \
#     {
#        f'{1}': f'{Sequence(1)}',
#        f'{2}': f'{Sequence(2)}'
#     }

# print(dictionary)


#33. Пользователь задаёт две строки. 
# Определить количество количество вхождений одной строки в другой.




#34. Подсчитать сумму цифр в вещественном числе.




#35. Написать программу получающую набор произведений чисел от 1 до N.
# Пример: пусть N = 4, тогда
# [ 1, 2, 6, 24 ]



#36. Задать список из n чисел последовательности (1+1n)n и вывести на экран их сумму

# def List(n): 
#     list = [] 
#     sum = 0 
#     for i in range(1, n+1):  
#         action = (1 + 1 / i)**i 
#         list.append(action) 
#         sum += action
#         i+=1 
#     print(list) 
#     return sum 
 
# print(List(2))


#37. Задать список из N элементов, заполненных числами из [-N, N].
#  Найти произведение элементов на указанных позициях.
#  Позиции хранятся в файле file.txt в одной строке одно число



#38. Реализовать алгоритм перемешивания списка. 

# from random import randint
# lst = [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12]
# count = len(lst)  // 2
# while count >= 0:
#     count1 = randint(0, len(lst)-1)
#     temp = lst[count1]
#     lst.pop(count1)
#     lst.append(temp)
#     count -= 1
# print(lst)


#39. Реализовать алгоритм задания случайных чисел. Без использования встроенного генератора псевдослучайных чисел



#40. Определить, присутствует ли в заданном списке строк, некоторое число 



#41. Определить, позицию второго вхождения строки в списке либо сообщить, что его нет.



#42. Найти сумму чисел списка стоящих на нечетной позиции



#43. Найти произведение пар чисел в списке. Парой считаем первый и последний элемент, второй и предпоследний и т.д. Пример: [2, 3, 4, 5, 6] => [12, 15, 16]; [2, 3, 5, 6] => [12, 15] 
# В заданном списке вещественных чисел найдите разницу между максимальным и минимальным значением дробной части элементов. Пример: [1.1, 1.2, 3.1, 5, 10.01] => 0.19



# Написать программу преобразования десятичного числа в двоичное



# Дано число. Составить список чисел Фибоначчи, в том числе для отрицательных индексов



# Строка содержит набор чисел. Показать большее и меньшее число



# Найти корни квадратного уравнения Ax² + Bx + C = 0
# Математикой
# Используя дополнительные библиотеки*



# Найти НОК двух чисел



# Вычислить число  c заданной точностью d
# 	Пример: при d = 0.001, π = 3.141. 10-1≤d≤10-10





# Составить список простых множителей натурального числа N
